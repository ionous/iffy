// Code generated by "stringer -type=Operator"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MUL-80]
	_ = x[QUO-81]
	_ = x[REM-82]
	_ = x[ADD-67]
	_ = x[SUB-68]
	_ = x[EQL-53]
	_ = x[NEQ-54]
	_ = x[LSS-55]
	_ = x[LEQ-56]
	_ = x[GTR-57]
	_ = x[GEQ-58]
	_ = x[LAND-43]
	_ = x[LOR-28]
}

const (
	_Operator_name_0 = "LOR"
	_Operator_name_1 = "LAND"
	_Operator_name_2 = "EQLNEQLSSLEQGTRGEQ"
	_Operator_name_3 = "ADDSUB"
	_Operator_name_4 = "MULQUOREM"
)

var (
	_Operator_index_2 = [...]uint8{0, 3, 6, 9, 12, 15, 18}
	_Operator_index_3 = [...]uint8{0, 3, 6}
	_Operator_index_4 = [...]uint8{0, 3, 6, 9}
)

func (i Operator) String() string {
	switch {
	case i == 28:
		return _Operator_name_0
	case i == 43:
		return _Operator_name_1
	case 53 <= i && i <= 58:
		i -= 53
		return _Operator_name_2[_Operator_index_2[i]:_Operator_index_2[i+1]]
	case 67 <= i && i <= 68:
		i -= 67
		return _Operator_name_3[_Operator_index_3[i]:_Operator_index_3[i+1]]
	case 80 <= i && i <= 82:
		i -= 80
		return _Operator_name_4[_Operator_index_4[i]:_Operator_index_4[i+1]]
	default:
		return "Operator(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
